/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFCell;

import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFRow;

/**
 *
 * @author ac176227
 */
public class ViewGUI extends javax.swing.JFrame
{

    /**
     * Creates new form ViewGUI
     */
        public ViewGUI()
        {
            initComponents();
            jtData.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        @Override
        public void valueChanged(ListSelectionEvent event) {
            if(! jtData.getSelectionModel().isSelectionEmpty())
                    {
                        int selectedRow = jtData.getSelectionModel().getMinSelectionIndex();
                        final JPanel panel = new JPanel();
                        final JRadioButton button1 = new JRadioButton("pre-Calculus A");
                        final JRadioButton button2 = new JRadioButton("pre-Calculus B");

                        panel.add(button1);
                        panel.add(button2);

                        JOptionPane.showMessageDialog(null, panel);
                        //JOptionPane.showMessageDialog(null, "Selected Row" + selectedRow);
                    }
                //System.out.println(jtData.getValueAt(jtData.getSelectedRow(), 0).toString());
            }

                });
                        }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtData = new javax.swing.JTable();
        panChooser = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblIcon = new javax.swing.JLabel();
        txtSearchBar = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuImport = new javax.swing.JMenuItem();
        mnuCreateDataSheet = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IB Sophomores dbs");
        setBackground(new java.awt.Color(219, 237, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jtData.setBackground(new java.awt.Color(204, 233, 247));
        jtData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID ", "Name"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jtData.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtData);
        if (jtData.getColumnModel().getColumnCount() > 0)
        {
            jtData.getColumnModel().getColumn(0).setResizable(false);
            jtData.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout panChooserLayout = new javax.swing.GroupLayout(panChooser);
        panChooser.setLayout(panChooserLayout);
        panChooserLayout.setHorizontalGroup(
            panChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        panChooserLayout.setVerticalGroup(
            panChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        lblTitle.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 18)); // NOI18N
        lblTitle.setText("Incoming IB Sophomores");

        lblIcon.setIcon(new javax.swing.ImageIcon("H:\\Comp sci IA\\Webp.net-resizeimage.png")); // NOI18N
        lblIcon.setText("ib");

        txtSearchBar.setForeground(new java.awt.Color(0, 0, 0));
        txtSearchBar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                txtSearchBarKeyReleased(evt);
            }
        });

        btnSave.setText("Save");

        jMenu1.setText("File");

        mnuImport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        mnuImport.setText("Import File");
        mnuImport.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mnuImportActionPerformed(evt);
            }
        });
        jMenu1.add(mnuImport);

        mnuCreateDataSheet.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        mnuCreateDataSheet.setText("Create Data Sheet");
        mnuCreateDataSheet.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mnuCreateDataSheetActionPerformed(evt);
            }
        });
        jMenu1.add(mnuCreateDataSheet);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblIcon)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTitle)
                        .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(panChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuImportActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mnuImportActionPerformed
    {//GEN-HEADEREND:event_mnuImportActionPerformed
     JFileChooser chooser = new JFileChooser();
     FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files", "xlsx");
     chooser.setFileFilter(filter);
     int returnVal = chooser.showOpenDialog(panChooser);
     if(returnVal == JFileChooser.APPROVE_OPTION)
     {
        try {
      
         String name;
         int IDNumber;
         XSSFWorkbook workbook = new XSSFWorkbook(new FileInputStream(chooser.getSelectedFile().getAbsolutePath()));
         XSSFSheet sheet = workbook.getSheetAt(0);  //this gets first sheet in workbook

         XSSFRow row;
         for(int r = 1; r < sheet.getLastRowNum()+1 ; r++)                 //rows start at 0, so do cells
         {
           row = sheet.getRow(r);
           name = row.getCell(0).getStringCellValue();   //assumes first cell is a String
           IDNumber = (int) row.getCell(1).getNumericCellValue();  //fourth cell is an int

           //System.out.printf("Name : %s\n", name);  //output what you read from excel
           //System.out.printf("ID : %d\n", IDNumber);
           //System.out.println();
          //following code connects table to excel file
           DefaultTableModel model = (DefaultTableModel) jtData.getModel();
           model.addRow(new Object [] {IDNumber, name});
      }
    } catch(IOException e){}
    }
    }//GEN-LAST:event_mnuImportActionPerformed

    private void mnuCreateDataSheetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mnuCreateDataSheetActionPerformed
    {//GEN-HEADEREND:event_mnuCreateDataSheetActionPerformed
     File file = new File("newfile.xlsx");
     JFileChooser chooser = new JFileChooser();
     FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files", "xlsx");
     chooser.setFileFilter(filter);
     int returnVal = chooser.showOpenDialog(panChooser);
     if(returnVal == JFileChooser.APPROVE_OPTION)
        try
        {
          FileInputStream fis = new FileInputStream(new File(chooser.getSelectedFile().getAbsolutePath()));
		XSSFWorkbook workbook = new XSSFWorkbook (fis);
		XSSFSheet sheet = workbook.getSheetAt(0);
		//Creates First Row
                //English classes
		XSSFRow row1 = sheet.createRow(0);
		XSSFCell r1c1 = row1.createCell(2);
		r1c1.setCellValue("ENG 1A");
		XSSFCell r1c2 = row1.createCell(3);
		r1c2.setCellValue("ENG 1B");
		XSSFCell r1c3 = row1.createCell(4);
		r1c3.setCellValue("ENG 2A");
                XSSFCell r1c4 = row1.createCell(5);
		r1c4.setCellValue("ENG 2B");
                XSSFCell r1c5 = row1.createCell(6);
		r1c5.setCellValue("ENG 3A");
                XSSFCell r1c6 = row1.createCell(7);
		r1c6.setCellValue("ENG 3B");
                XSSFCell r1c7 = row1.createCell(8);
		r1c7.setCellValue("ENG 4A");
                XSSFCell r1c8 = row1.createCell(9);
		r1c8.setCellValue("ENG 4B");
                //Math classes
                XSSFCell r1c9 = row1.createCell(10);
		r1c9.setCellValue("ALG A");
                XSSFCell r1c10 = row1.createCell(11);
		r1c10.setCellValue("ALG B");
                XSSFCell r1c11= row1.createCell(12);
		r1c11.setCellValue("GEOM A");
                XSSFCell r1c12= row1.createCell(13);
		r1c12.setCellValue("GEOM B");
                XSSFCell r1c13 = row1.createCell(14);
		r1c13.setCellValue("ALG2 A");
                XSSFCell r1c14 = row1.createCell(15);
		r1c14.setCellValue("ALG2 B");
                XSSFCell r1c15 = row1.createCell(16);
		r1c15.setCellValue("SLMATH A");
                XSSFCell r1c16 = row1.createCell(17);
		r1c16.setCellValue("SLMATH B");
                XSSFCell r1c17 = row1.createCell(18);
		r1c17.setCellValue("HLMATCH A");
                XSSFCell r1c18 = row1.createCell(19);
		r1c18.setCellValue("HLMATH B");
                XSSFCell r1c19 = row1.createCell(20);
		r1c19.setCellValue("HLMATH C");
                //Science 
                XSSFCell r1c20 = row1.createCell(21);
		r1c20.setCellValue("SCI1 A");
                XSSFCell r1c21 = row1.createCell(22);
		r1c21.setCellValue("SCI1 B");
                XSSFCell r1c22 = row1.createCell(23);
		r1c22.setCellValue("SC12 A");
                XSSFCell r1c23 = row1.createCell(24);
		r1c23.setCellValue("SCI2 B");
                XSSFCell r1c24 = row1.createCell(25);
		r1c24.setCellValue("SCI3 A");
                XSSFCell r1c25 = row1.createCell(26);
		r1c25.setCellValue("SCI3 B");
                XSSFCell r1c26 = row1.createCell(27);
		r1c26.setCellValue("SCI3 C");
                
		fis.close();
		FileOutputStream fos =new FileOutputStream(new File("newfile.xlsx"));
	        workbook.write(fos);
	        fos.close();
		System.out.println("Done");
            
        } catch(IOException e){
                System.out.println(e);
                }
    }//GEN-LAST:event_mnuCreateDataSheetActionPerformed

    private void filter(String query)
    {
      TableRowSorter<DefaultTableModel> tr = new TableRowSorter<> ((DefaultTableModel) jtData.getModel());
      jtData.setRowSorter(tr); 
      tr.setRowFilter(RowFilter.regexFilter("(?i)"+query));
    }
    
    private void txtSearchBarKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtSearchBarKeyReleased
    {//GEN-HEADEREND:event_txtSearchBarKeyReleased
        String query = txtSearchBar.getText();
        filter(query); 
    }//GEN-LAST:event_txtSearchBarKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ViewGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    public javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jtData;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JMenuItem mnuCreateDataSheet;
    private javax.swing.JMenuItem mnuImport;
    private javax.swing.JPanel panChooser;
    private javax.swing.JTextField txtSearchBar;
    // End of variables declaration//GEN-END:variables
}
